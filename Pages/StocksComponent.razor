@page "/stocks"
@inject HttpClient Http
@inject ApiKey fmpApiKey
@using BlazorApp1.Shared.Data
@attribute [Authorize]

<PageTitle>Aktienliste - IDPA Aktienanalyse</PageTitle>
<PageHeader HeaderTitle="Stocks"></PageHeader>
<br />

<style>
    body {
        margin: 0;
        min-height: 100vh;
        background: #fafafa;
        padding: 0;
        align-items: center;
        justify-content: center;
    }
</style>

<div style="min-height: 100vh;">
    <div class="mt-4 mb-5">
        <div class="container">
            <div class="row height d-flex justify-content-center align-items-center">
                <div class="col-md-6">
                    <div class="form">
                        <input type="text" class="form-control form-input" @bind-value="SearchTerm" placeholder="Search anything..." />
                        <button type="submit" class="testbuttonvinc" @onclick="GetCompanies">Search</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="container-fluid" style="width: 80%;">
        @if (companies == null || string.IsNullOrEmpty(SearchTerm))
        {
            if (symbols == null)
            {
            }
            else
            {
                <Virtualize Items="symbols" Context="company">
                    <div class="container">
                        <div class="row">
                            <div class="col-lg-10 cont_v">
                                <div class="career-search mb-60">
                                    <div class="filter-result">
                                        <div class="job-box d-md-flex align-items-center justify-content-between">
                                            <div class="job-left d-md-flex align-items-center flex-wrap">
                                                <div class="temp-img">
                                                    <div class="img-holder mr-md-4 mb-md-0 mb-4 mx-auto mx-md-0 d-md-none d-lg-flex">
                                                        <img src="@GetImageUrl(@company.symbol)" />
                                                    </div>
                                                </div>
                                                <div class="job-content">
                                                    <div class="header_ticker">
                                                        @company.symbol
                                                    </div>
                                                    <div class="company_details">
                                                        @company.name | @company.headQuarter
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="job-right my-4 flex-shrink-0">
                                                <a href="@($"/stock/{company.symbol}")" class="btn d-block w-100 d-sm-inline-block testbuttonvinc2">Get Details</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </Virtualize>
            }
        }
        else
        {
            <Virtualize Items="companies" Context="company">
                <div class="container">
                    <div class="row">
                        <div class="col-lg-10 cont_v">
                            <div class="career-search mb-60">
                                <div class="filter-result">
                                    <div class="job-box d-md-flex align-items-center justify-content-between">
                                        <div class="job-left d-md-flex align-items-center flex-wrap">
                                            <div class="temp-img">
                                                <div class="img-holder mr-md-4 mb-md-0 mb-4 mx-auto mx-md-0 d-md-none d-lg-flex">
                                                    <img src="@GetImageUrl(@company.symbol)" />
                                                </div>
                                            </div>
                                            <div class="job-content">
                                                <div class="header_ticker">
                                                    @company.symbol
                                                </div>
                                                <div class="company_details">
                                                    @company.name | @company.exchangeShortName
                                                </div>
                                            </div>
                                        </div>
                                        <div class="job-right my-4 flex-shrink-0">
                                            <a href="@($"/stock/{company.symbol}")" class="btn d-block w-100 d-sm-inline-block testbuttonvinc2">Get Details</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </Virtualize>
        }
    </div>
</div>


@code {
    private StatementList[]? symbols;
    private SearchItems[]? companies;
    string SearchTerm { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        symbols = await Http.GetFromJsonAsync<StatementList[]>("dowjones_constituent?apikey=" + fmpApiKey.myApiKey);
    }

    protected async Task GetCompanies()
    {
        companies = await Http.GetFromJsonAsync<SearchItems[]>("search?query=" + SearchTerm + "&exchange=TSX,AMEX,NASDAQ,NYSE,EURONEXT&apikey=" + fmpApiKey.myApiKey);
    }

    public class StatementList
    {
        public string symbol { get; set; }
        public string? name { get; set; }
        public string? sector { get; set; }
        public string? founded { get; set; }
        public string? headQuarter { get; set; }
    }

    public class SearchItems
    {
        public string? symbol { get; set; }
        public string? name { get; set; }
        public string? exchangeShortName { get; set; }
        public string? currency { get; set; }
    }

    private string GetImageUrl(string ticker)
    {
        return "https://financialmodelingprep.com/image-stock/"+ticker+".png";
    }
}
@* Client/Shared/AccessControl.razor *@

@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
@inject AuthenticationStateProvider AuthState

<div class="container">
    <AuthorizeView>
        <Authorized>
            <div class="container d-flex justify-content-center align-items-center" style="width: 80%;">
                <div class="container">
                    <div class="container d-flex align-items-center justify-content-center">
                        <img class="profile-picture-auth0" src="@Picture">
                    </div>
                    <br />
                    <div class="container-fluid text-center">
                        <h1>Welcome!</h1>
                        <h6>@Username</h6>
                    </div>
                    <br />
                    <div class="container d-flex align-items-center justify-content-center">
                        <a style="text-decoration: none;" class="account-button" href="#" @onclick="BeginSignOut"><i class="bi bi-box-arrow-left navicon"></i> Log out</a>
                    </div>
                </div>
            </div>
        </Authorized>
        <NotAuthorized>
            <div class="container-fluid d-grid justify-content-center align-items-center" style="width: 80%;">
                <div class="container d-flex text-center">
                    <h3>You need an account to access this website's data. Please log in below.</h3>
                </div>
                <br />
                <div class="container d-flex align-items-center justify-content-center">
                    <a href="authentication/login" class="account-button"><i class="bi bi-box-arrow-in-right navicon"></i> Log in</a>
                </div>
            </div>
        </NotAuthorized>
    </AuthorizeView>
</div>

@code {
    private string Username = "Anonymous User";
    private string Picture = "";

    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

    protected override async Task OnInitializedAsync()
    {
        var state = await AuthState.GetAuthenticationStateAsync();

        Username = state.User.Identity.Name ?? string.Empty;

        Picture = state.User.Claims
                    .Where(c => c.Type.Equals("picture"))
                    .Select(c => c.Value)
                    .FirstOrDefault() ?? string.Empty;

        await base.OnInitializedAsync();
    }
}